# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

orbs:
  win: circleci/windows@2.2.0 # The Windows orb give you everything you need to start using the Windows executor.

jobs:
  build_macos:
    working_directory: ~/repo/
    macos:
      xcode: 13.0.0
    resource_class: macos.x86.medium.gen2
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - run: (cd gephgui-wry/gephgui && npm i && CI= npm run build)
      - run: (cd macos && ./build-macos.bash)
      - run: pip3 install --upgrade b2
      - run: b2 authorize-account $B2_KEYID $B2_APPKEY
      - run: b2 upload-file geph-dl macos/geph-macos.dmg STAGING/geph-macos.dmg
      - store_artifacts:
          path: macos/geph-macos.dmg
          destination: geph-macos.dmg
  # build_appimage:
  #   docker:
  #     - image: cimg/node:14.9.0
  #   steps:
  #     - checkout
  #     - run: sudo apt update
  #     - run: sudo apt install fuse
  #     - run: git submodule update --init --recursive
  #     - run: curl https://sh.rustup.rs -sSf | sh -s -- -y
  #     - run: echo 'export PATH=$HOME/.cargo/bin:$PATH' >> $BASH_ENV
  #     - run: (cd gephgui-wry/gephgui && npm i && CI= npm run build)
  #     - run: (cd appimage && bash build-appimage.bash)
  #     - store_artifacts:
  #         path: appimage/Geph/Geph-x86_64.AppImage
  #         destination: Geph-x86_64.AppImage
  build_flatpak:
    machine:
      image: ubuntu-2004:202107-02
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: sudo apt update && sudo apt install flatpak-builder flatpak ca-certificates python3-pip
      - run: flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
      - run: flatpak-builder --force-clean --install-deps-from flathub --user build-dir flatpak/io.geph.GephGui.yml  --repo=repo
      - run: flatpak build-bundle repo io.geph.GephGui.flatpak io.geph.GephGui --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo
      - run: sudo pip3 install --upgrade b2
      - run: b2 authorize-account $B2_KEYID $B2_APPKEY
      - run: b2 upload-file geph-dl io.geph.GephGui.flatpak STAGING/Geph-x86_64.flatpak
      - store_artifacts:
          path: io.geph.GephGui.flatpak
          destination: Geph-x86_64.flatpak
  build_windows:
    executor:
      name: win/default
      shell: bash.exe
      size: xlarge
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: curl https://win.rustup.rs/ > rustup-init.exe
      - run: ./rustup-init -y --default-toolchain "stable-i686-pc-windows-msvc" --profile minimal
      - run: (cd gephgui-wry/gephgui && npm i && CI= npm run build)
      - run: PATH=$PATH:/c/Users/circleci/.cargo/bin CARGO_NET_GIT_FETCH_WITH_CLI=true bash windows/build-windows.bash
      # - run: apt install python3-pip
      - run: pip install --upgrade b2
      - run: b2 authorize-account $B2_KEYID $B2_APPKEY
      - run: b2 upload-file geph-dl windows/Output/geph-windows-setup.exe STAGING/geph-windows.setup.exe
      - store_artifacts:
          path: windows/Output/geph-windows-setup.exe
          destination: geph-windows-setup.exe

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      # - build_appimage:
      #     context:
      #       - master
      - build_flatpak:
          context:
            - master
      - build_windows:
          context:
            - master
      - build_macos:
          context:
            - master
