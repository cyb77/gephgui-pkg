# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

orbs:
  win: circleci/windows@2.2.0 # The Windows orb give you everything you need to start using the Windows executor.

jobs:
  build_appimage:
    docker:
      - image: cimg/node:14.9.0
    steps:
      - checkout
      - run: sudo apt install fuse
      - run: git submodule update --init --recursive
      - run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - run: echo 'export PATH=$HOME/.cargo/bin:$PATH' >> $BASH_ENV
      - run: (cd gephgui-wry/gephgui && npm ci && CI= npm run build)
      - run: (cd appimage && bash build-appimage.bash)
      - store_artifacts:
          path: appimage/out/Geph-.glibc2.18-x86_64.AppImage
          destination: Geph.glibc2.18-x86_64.AppImage
  build_windows:
    executor:
      name: win/default
      shell: bash.exe
      size: xlarge
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: curl https://win.rustup.rs/ > rustup-init.exe
      - run: ./rustup-init -y --default-toolchain "stable-i686-pc-windows-msvc" --profile minimal
      - run: (cd gephgui-wry/gephgui && npm ci && CI= npm run build)
      - run: PATH=$PATH:/c/Users/circleci/.cargo/bin CARGO_NET_GIT_FETCH_WITH_CLI=true bash windows/build-windows.bash
      # - run: bash sync-binaries.sh
      # - run: bash build-windows.sh
      # - run: sudo apt install python3-pip
      # - run: sudo pip3 install --upgrade b2
      # - run: b2 authorize-account $B2_KEYID $B2_APPKEY
      # - run: b2 upload-file ./dist/*.exe b2://geph-dl/STAGING/
      - store_artifacts:
          path: windows/Output/geph-windows-setup.exe
          destination: geph-windows-setup.exe

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build_appimage:
          context:
            - master
      - build_windows:
          context:
            - master
